/*
 * Omap3530SDCard.h
 *
 *  Created on: 05.04.2017
 *      Author: benimurza
 */

#ifndef OMAP3530SDCARD_H_
#define OMAP3530SDCARD_H_
#include <inttypes.h>

#define REG(x)(*((volatile uint32_t *)(x)))

typedef enum {
    SDv1 = 10,
    SDv2 = 2,
    SDIO = 3,
    MMC = 4,
    UNDEFINED = 5
} SDCardTypes_t;

// CMD typedef
typedef enum {
    CMD0,
    CMD1,
    CMD2,
    CMD3,
    CMD4,
    CMD5,
    CMD6,
    CMD7,
    CMD8,
    ACMD41,
    CMD55
    // and so on, until CMD63. TODO: finish implementation
} SDCardCommands_t;


// Clocks used by the MMC1 module
#define CM_ICLKEN1_CORE 0x48004A10
#define CM_FCLKEN1_CORE 0x48004A00

/*
 * Registers for channel 1 MMC/SD/SDIO module.
 */
#define MMCHS1_SYSCONFIG    0x4809C010
#define MMCHS1_SYSSTATUS    0x4809C014
#define MMCHS1_CSRE         0x4809C024
#define MMCHS1_SYSTEST      0x4809C028
#define MMCHS1_CON          0x4809C02C
#define MMCHS1_PWCNT        0x4809C030
#define MMCHS1_BLK          0x4809C104
#define MMCHS1_ARG          0x4809C108
#define MMCHS1_CMD          0x4809C10C
#define MMCHS1_RSP10        0x4809C110
#define MMCHS1_RSP32        0x4809C114
#define MMCHS1_RSP54        0x4809C118
#define MMCHS1_RSP76        0x4809C11C
#define MMCHS1_DATA         0x4809C120
#define MMCHS1_PSTATE       0x4809C124
#define MMCHS1_HCTL         0x4809C128
#define MMCHS1_SYSCTL       0x4809C12C
#define MMCHS1_STAT         0x4809C130
#define MMCHS1_IE           0x4809C134
#define MMCHS1_ISE          0x4809C138
#define MMCHS1_AC12         0x4809C13C
#define MMCHS1_CAPA         0x4809C140
#define MMCHS1_CUR_CAPA     0x4809C148
#define MMCHS1_REV          0x4809C1FC

// Clk control for loopback
#define CONTROL_PADCONF_MMC1_CLK 0x48002144

#define CM_SYSCONFIG 0x48004810

/*
 * Bit definitions
 */
// CM_FCLKEN1_CORE and CM_ICLKEN1_CORE
#define CM_FCLKEN1_CORE_EN_MMC1 24
#define CM_ICLKEN1_CORE_EN_MMC1 24

// MMCHS_SYSCONFIG
#define MMCHS_SYSCONFIG_AUTOIDLE 0
#define MMCHS_SYSCONFIG_SOFTRESET 1
#define MMCHS_SYSCONFIG_ENAWAKEUP 2
#define MMCHS_SYSCONFIG_SIDLEMODE 3 // 2 bit
#define MMCHS_SYSCONFIG_CLOCKACTIVITY 8 // 2 bit
/*** Rest of bits are reserved ***/

// MMCHS_SYSSTATUS
#define MMCHS_SYSSTATUS_RESETDONE 0
/*** Rest of bits are reserved ***/

// MMCHS_CON
#define MMCHS_CON_OPEN_DRAIN_MODE 0 // MMC Only
#define MMCHS_CON_INIT 1
#define MMCHS_CON_BROADCAST_HOST_RESPONSE 2 // MMC Only
#define MMCHS_CON_STREAM_COMMAND 3 // MMC Only
#define MMCHS_CON_MODE 4
#define MMCHS_CON_DATA_WIDTH_8 5
#define MMCHS_CON_MMC_INTERRUPT_COMMAND 6
#define MMCHS_CON_CARD_DETECT_POLARITY 7
#define MMCHS_CON_WRITE_PROTECT_POLARITY 8
#define MMCHS_CON_DEBOUNCE_FILTER_VALUE 9 // 2 bit
#define MMCHS_CON_CONTROL_POWER_DAT_LINE 11
#define MMCHS_CON_CEATA_CONTROL_MODE 12
#define MMCHS_CON_OUT_OF_BAND_INTERRUPT_POLARITY 13 // MMC only
#define MMCHS_CON_OUT_OF_BAND_INTERRUPT_ENABLE 14 // MMC only
#define MMCHS_CON_CONTROL_POWER_MMC_LINES 15
#define MMCHS_CON_CLK_EXTERNAL_FREE_RUNNING 16
/*** Rest of bits are reserved ***/

// MMCHS_CMD
#define MMCHS_CMD_DMA_ENABLE 0
#define MMCHS_CMD_BLOCK_COUNT_ENABLE 1
#define MMCHS_CMD_AUTO_CMD12_ENABLE 2
#define MMCHS_CMD_DATA_TRANSFER_DIRECTION 4
#define MMCHS_CMD_MULTI_SINGLE_BLOCK_SELECT 5
#define MMCHS_CMD_RESPONSE_TYPE 16 // 2 bit
#define MMCHS_CMD_COMMAND_CRC_CHECK_ENABLE 19
#define MMCHS_CMD_COMMAND_INDEX_CHECK_ENABLE 20
#define MMCHS_CMD_DATA_PRESENT_SELECT 21
#define MMCHS_CMD_CMD_TYPE 22 // 2 bit
#define MMCHS_CMD_INDEX // 6 bit
/*** Rest of bits are reserved ***/

// MMCHS_PSTATE
#define MMCHS_PSTATE_COMMAND_INHIBIT_CMD_LINE 0
#define MMCHS_PSTATE_COMMAND_INHIBIT_DATA_LINE 1
#define MMCHS_PSTATE_DAT_LINE_ACTIVE 2
#define MMCHS_PSTATE_WRITE_TRANSFER_ACTIVE 8
#define MMCHS_PSTATE_READ_TRANSFER_ACTIVE 9
#define MMCHS_PSTATE_BUFFER_WRITE_ENABLE 10
#define MMCHS_PSTATE_BUFFER_READ_ENABLE 11
#define MMCHS_PSTATE_DAT_LINE_SIGNAL_LEVEL 20 // 4 bit
#define MMCHS_PSTATE_CMD_LINE_SIGNAL_LEVEL 24
/*** Rest of bits are reserved ***/

// MMCHS_HCTL
#define MMCHS_HCTL_DATA_TRANSFER_WIDTH 1
#define MMCHS_HCTL_SD_BUS_POWER 8
#define MMCHS_HCTL_SD_BUS_VOLTAGE_SELECT 9
#define MMCHS_HCTL_STOP_AT_BLOCK_GAP_REQUEST 16
#define MMCHS_HCTL_CONTINUE_REQUEST 17
#define MMCHS_HCTL_READ_WAIT_CONTROL 18
#define MMCHS_HCTL_INTERRUPT_BLOCK_AT_GAP 19
#define MMCHS_HCTL_WAKEUP_EVENT_EN_ON_SD_CARD_INTERRUPT 24
#define MMCHS_HCTL_WAKEUP_EVENT_EN_ON_SD_CARD_INSERTION 25
#define MMCHS_HCTL_WAKEUP_EVENT_EN_ON_SD_CARD_REMOVAL 26
#define MMCHS_HCTL_WAKEUP_EVENT_EN_ON_OUT_OF_BAND_INTERRUPT 27
/*** Rest of bits are reserved ***/

// MMCHS_SYSCTL
#define MMCHS_SYSCTL_INTERNAL_CLOCK_ENABLE 0
#define MMCHS_SYSCTL_INTERNAL_CLOCK_STABLE 1
#define MMCHS_SYSCTL_CARD_CLOCK_ENABLE 2
#define MMCHS_SYSCTL_CLOCK_FREQ_SELECT 6 // 10 bit
#define MMCHS_SYSCTL_DATA_TIMEOUT_COUNTER 16 // 4 bit
#define MMCHS_SYSCTL_SOFTWARE_RESET_FOR_ALL 24
#define MMCHS_SYSCTL_SOFTWARE_RESET_CMD_LINE 25
#define MMCHS_SYSCTL_SOFTWARE_RESET_DAT_LINE 26
/*** Rest of bits are reserved ***/

// MMCHS_STAT
#define MMCHS_STAT_COMMAND_COMPLETE 0
#define MMCHS_STAT_TRANSFER_COMPLETE 1
#define MMCHS_STAT_BLOCK_GAP_EVENT 2
#define MMCHS_STAT_BUFFER_WRITE_READY 4
#define MMCHS_STAT_BUFFER_READ_READY 5
#define MMCHS_STAT_CARD_INTERRUPT 8
#define MMCHS_STAT_OUT_OF_BAND_INTERRUPT 9
#define MMCHS_STAT_ERROR_INTERRUPT 15
#define MMCHS_STAT_COMMAND_TIMEOUT_INTERRUPT 16
#define MMCHS_STAT_COMMAND_CRC_ERROR 17
#define MMCHS_STAT_COMMAND_END_BIT_ERROR 18
#define MMCHS_STAT_COMMAND_INDEX_ERROR 19
#define MMCHS_STAT_DATA_TIMEOUT_ERROR 20
#define MMCHS_STAT_DATA_CRC_ERROR 21
#define MMCHS_STAT_DATA_END_BIT_ERROR 22
#define MMCHS_STAT_AUTO_CMD12_ERROR 24
#define MMCHS_STAT_CARD_ERROR 28
#define MMCHS_STAT_BAD_ACCESS_TO_DATA_SPACE 29
/*** Rest of bits are reserved ***/

// MMCHS_IE (IE = Interrupt Enable)
#define MMCHS_IE_COMMAND_COMPLETED_IE 0
#define MMCHS_IE_TRANSFER_COMPLETED_IE 1
#define MMCHS_IE_BLOCK_GAP_EVENT_IE 2
#define MMCHS_IE_BUFFER_WRITE_READY_IE 4
#define MMCHS_IE_BUFFER_READ_READY_IE 5
#define MMCHS_IE_CARD_IE 8
#define MMCHS_IE_OUT_OF_BAND_IE 9
#define MMCHS_IE_COMMAND_TIMEOUT_ERROR_IE 16
#define MMCHS_IE_COMMAND_CRC_ERROR_IE 17
#define MMCHS_IE_COMMAND_END_BIT_ERROR_IE 18
#define MMCHS_IE_COMMAND_INDEX_ERROR_IE 19
#define MMCHS_IE_DATA_TIMEOUT_ERROR_IE 20
#define MMCHS_IE_DATA_CRC_ERROR_IE 21
#define MMCHS_IE_DATA_END_BIT_ERROR_IE 22
#define MMCHS_IE_AUTO_CMD12_ERROR_IE 24
#define MMCHS_IE_CARD_ERROR_IE 28
#define MMCHS_IE_BAD_ACCESS_TO_DATA_SPACE_IE 29
/*** Rest of bits are reserved ***/

// MMCHS_CAPA
#define MMCHS_CAPA_VOLTAGE_SUPPORT_3_3 24
#define MMCHS_CAPA_VOLTAGE_SUPPORT_3_0 25
#define MMCHS_CAPA_VOLTAGE_SUPPORT_1_8 26
/*** Rest of bits are reserved or read only ***/
/////////////////////////

#define MMCHS_ACTIVATE_RESET 0x02
#define MMCHS_STATUS_RESET_DONE 0x01

#define MMCHS_HOST_TO_CARD_INIT_SEQUENCE 0x02

#define MMCHS_1024_BYTE_BLOCK_SIZE 0x400

int32_t sdCard_initialize_Ch1(void);

void sdCard_sendInitializationSequence_Ch1(void);

void sdCard_setTransactionBlockSize(uint32_t blockSize);
void sdCard_setTransactionBlockCount(uint32_t blockNumber);

void sdCard_sendCommand(SDCardCommands_t command);

uint32_t sdCard_read512ByteBlock(uint8_t * buffer, uint32_t address);

#endif /* OMAP3530SDCARD_H_ */
